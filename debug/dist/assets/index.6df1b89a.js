import{o as N,L as I,m as X,a as A,b as Y,c as q,d as H,e as R}from"./vendor.f422e9bc.js";const U=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const r of i)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const r={};return i.integrity&&(r.integrity=i.integrity),i.referrerpolicy&&(r.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?r.credentials="include":i.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(i){if(i.ep)return;i.ep=!0;const r=t(i);fetch(i.href,r)}};U();const $="FeatureCollection",J=[{type:"Feature",properties:{id:null},geometry:{type:"Polygon",coordinates:[[[116.88220484452944,36.644494329964424],[116.88212180633829,36.64269121495656],[116.88327247841568,36.642667489759084],[116.88398423433983,36.6432013067022],[116.8843638374994,36.642655627160345],[116.8851230438185,36.64324875709715],[116.88482647885009,36.644304528384644],[116.88331992881062,36.644862070525235],[116.88326061581694,36.64437570397706],[116.8836402189765,36.64364022285543],[116.88310640203338,36.64341483347945],[116.88316571502705,36.64418590239729],[116.88273866147256,36.643580909861754],[116.88272679887382,36.644316390983384],[116.88272679887382,36.644316390983384],[116.88220484452944,36.644494329964424]]]}},{type:"Feature",properties:{line_code:"1HAOXIANZHENGXIAN",line_name:"1\u53F7\u7EBF\u6B63\u7EBF"},geometry:{type:"LineString",coordinates:[[116.88211618239734,36.64408116456763],[116.8917334769641,36.64288991348541]]}}];var M={type:$,features:J};class k{constructor(e,t,s,i){this.p1=e,this.p2=t,this.edgeType=s,this.originalIndex=i,this.interiorRing=!1,this.minX=Math.min(e.p[0],t.p[0]),this.minY=Math.min(e.p[1],t.p[1]),this.maxX=Math.max(e.p[0],t.p[0]),this.maxY=Math.max(e.p[1],t.p[1]),this.intersectionPoints=[],this.nextEdge=null}}class C{constructor(e){this.p=e}}function D(n,e,t,s,i){const r=e.type==="Feature"?e.geometry:e,o=r.type==="LineString"?[r.coordinates]:r.coordinates;let u=0;for(let c=0;c<o.length;c++){const h=o[c].length-1;let a=new C(o[c][0]),d=null,g={nextEdge:null};for(let y=0;y<h;y++){d=new C(o[c][y+1]),a.nextPoint=d,d.prevPoint=a;const P=new k(a,d,"polyline",u);s.push(P),g.nextEdge=P,P.prevEdge=g,i[0]=Math.min(i[0],a.p[0]),i[1]=Math.min(i[1],a.p[1]),i[2]=Math.max(i[2],a.p[0]),i[3]=Math.max(i[3],a.p[1]),a=d,u=u+1,g=P}i[0]=Math.min(i[0],o[c][h][0]),i[1]=Math.min(i[1],o[c][h][1]),i[2]=Math.max(i[2],o[c][h][0]),i[3]=Math.max(i[3],o[c][h][1])}const l=n.type==="Feature"?n.geometry:n,p=l.type==="Polygon"?[l.coordinates]:l.coordinates,f=p.length;for(let c=0;c<f;c++){let h=p[c].length;for(let a=0;a<h;a++){let d=p[c][a],g=d.length;const y=new C(d[0]);let P=y,x,m=null,S={nextEdge:null,prevEdge:null},F=null;for(let E=1;E<g;E++)x=new C(d[E]),P.nextPoint=x,x.prevPoint=P,m=new k(P,x,"polygon",u),S.nextEdge=m,m.prevEdge=S,E===1&&(F=m),a>0&&(m.interiorRing=!0),m.intersectPolylineBbox=K(m,i),t.push(m),P=x,u=u+1,S=m;m.nextEdge=F,F.prevEdge=m,x.nextPoint=y.nextPoint,y.prevPoint=x.prevPoint}}}function K(n,e){return!(n.maxX<e[0]||n.minX>e[2]||n.maxY<e[1]||n.minY>e[3])}class j{constructor(e,t,s,i){this.p=e,this.polylineEdge=t,this.polygonEdge=s,this.isHeadingIn=i,this.distanceFromPolylineEdgeStart=L(this.polylineEdge.p1.p,this.p),this.distanceFromPolygonEdgeStart=L(this.polygonEdge.p1.p,this.p),this.polygonEdge.intersectionPoints.push(this),this.polylineEdge.intersectionPoints.push(this),this.visitCount=0}incrementVisitCount(){this.visitCount=this.visitCount+1}}function L(n,e){let t=e[0]-n[0],s=e[1]-n[1];return t*=t,s*=s,Math.sqrt(t+s)}function G(n,e,t){let s,i,r,o=e.length,u=n.length;for(s=0;s<o;s++){let l=e[s];for(i=0;i<u;i++){const p=n[i];if(!p.intersectPolylineBbox||p.maxX<l.minX||p.minX>l.maxX||p.maxY<l.minY||p.minY>l.maxY)continue;const f=Z(l,p);if(f!==null)for(r=0;r<f.length;r++){const c=N(p.p1.p[0],p.p1.p[1],p.p2.p[0],p.p2.p[1],l.p1.p[0],l.p1.p[1]),h=new j(f[r],l,p,c>0);t.push(h)}}}e.forEach(function(l){l.intersectionPoints.sort(function(p,f){return p.distanceFromPolylineEdgeStart-f.distanceFromPolylineEdgeStart})}),n.forEach(function(l){l.intersectionPoints.sort(function(p,f){return p.distanceFromPolygonEdgeStart-f.distanceFromPolygonEdgeStart})})}const Q=1e-9;function w(n,e){return n[0]*e[1]-n[1]*e[0]}function O(n,e){return n[0]*e[0]+n[1]*e[1]}function v(n,e,t){return[n[0]+e*t[0],n[1]+e*t[1]]}function Z(n,e,t){const s=[n.p2.p[0]-n.p1.p[0],n.p2.p[1]-n.p1.p[1]],i=[e.p2.p[0]-e.p1.p[0],e.p2.p[1]-e.p1.p[1]],r=[e.p1.p[0]-n.p1.p[0],e.p1.p[1]-n.p1.p[1]];let o=w(s,i),u=o*o;const l=O(s,s);if(u>0){const d=w(r,i)/o;if(d<0||d>1)return null;const g=w(r,s)/o;return g<0||g>1?null:d===0||d===1?t?null:[v(n.p1.p,d,s)]:g===0||g===1?t?null:[v(e.p1.p,g,i)]:[v(n.p1.p,d,s)]}const p=O(r,r);if(o=w(r,s),u=o*o,u>Q*l*p)return null;const f=O(s,r)/l,c=f+O(s,i)/l,h=Math.min(f,c),a=Math.max(f,c);return h<=1&&a>=0?h===1?t?null:[v(n.p1.p,h>0?h:0,s)]:a===0?t?null:[v(n.p1.p,a<1?a:1,s)]:t&&h===0&&a===1?null:[v(n.p1.p,h>0?h:0,s),v(n.p1.p,a<1?a:1,s)]:null}function z(n,e){const t=[],s=[],i=[];if(D(n,e,s,i,[1/0,1/0,1/0,1/0]),G(s,i,t),t.length===0)return n;const o=[];let u=null;for(let f=0;f<i.length;f++){const c=i[f];if(c.intersectionPoints){u=c.intersectionPoints[0];break}}let l=u,p={visitCount:1};for(;u!==p;){if(p.visitCount>=2){let a=!1;for(let d=0;d<t.length;d++){const g=t[d];if(g.visitCount<2){l=g,a=!0;break}}if(!a)break}l.visitCount=l.visitCount+1;let f=[];o.push(f),f.push(l.p),l.visitCount=l.visitCount+1;let c=V(l,f);p=c;const h=c.isHeadingIn?T:W;for(;c!==l;)c=h(c,f),c!==l&&(c=V(c,f));if(p.visitCount>=2){let a=!1;for(let d=0;d<t.length;d++){const g=t[d];if(g.visitCount<2){l=g,a=!0;break}}a&&(p=l)}l=p}return{type:"Feature",properties:{},geometry:{type:"MultiPolygon",coordinates:o.map(f=>[f])}}}function V(n,e){let t=n.polygonEdge;if(t.intersectionPoints.length>1&&t.intersectionPoints[t.intersectionPoints.length-1]!==n){let r=_(n,t.intersectionPoints),o=t.intersectionPoints[r+1];return e.push(o.p),o.incrementVisitCount(),o}let s=!0;for(;s;){if(e.push(t.p2.p),t=t.nextEdge,t===null)return n;t.intersectionPoints.length>0&&(s=!1)}return t.intersectionPoints[0].incrementVisitCount(),e.push(t.intersectionPoints[0].p),t.intersectionPoints[0]}function _(n,e){for(let t=0;t<e.length;t++)if(e[t]===n)return t;return null}function W(n,e){let t=n.polylineEdge;if(t.intersectionPoints.length===2){const r=t.intersectionPoints[t.intersectionPoints.length-1];if(r===n){const o=t.intersectionPoints[0];return e.push(o.p),o.incrementVisitCount(),o}else return e.push(r.p),r.incrementVisitCount(),r}else if(t.intersectionPoints.length>2)if(t.intersectionPoints[t.intersectionPoints.length-1]===n){let o=_(n,t.intersectionPoints),u=t.intersectionPoints[o-1];return e.push(u.p),u.incrementVisitCount(),u}else{let o=_(n,t.intersectionPoints),u=t.intersectionPoints[o-1];return e.push(u.p),u.incrementVisitCount(),u}let s=!0;for(;s;){if(e.push(t.p1.p),t=t.prevEdge,t.originalIndex===void 0)return n;t.intersectionPoints.length>0&&(s=!1)}if(t.originalIndex===void 0)return n;const i=t.intersectionPoints[t.intersectionPoints.length-1];return i.incrementVisitCount(),e.push(i.p),i}function T(n,e){let t=n.polylineEdge;if(t.intersectionPoints.length===2){const r=t.intersectionPoints[t.intersectionPoints.length-1];if(r===n){const o=t.intersectionPoints[0];return e.push(o.p),o.incrementVisitCount(),o}else return e.push(r.p),r.incrementVisitCount(),r}else if(t.intersectionPoints.length>2&&t.intersectionPoints[t.intersectionPoints.length-1]!==n){let o=_(n,t.intersectionPoints),u=t.intersectionPoints[o+1];return e.push(u.p),u.incrementVisitCount(),u}let s=!0;for(;s;){if(e.push(t.p2.p),t=t.nextEdge,t===null)return n;t.intersectionPoints.length>0&&(s=!1)}if(t===void 0)return n;const i=t.intersectionPoints[t.intersectionPoints.length-1];return i.incrementVisitCount(),e.push(i.p),i}var B=(n,e)=>{const t=n.__vccOpts||n;for(const[s,i]of e)t[s]=i;return t};delete I.Icon.Default.prototype._getIconUrl;I.Icon.Default.mergeOptions({iconRetinaUrl:X,iconUrl:A,shadowUrl:Y});const b={name:"app",mounted(){const n=I.geoJSON(M,{weight:10,fillOpacity:0});let e=window.map=I.map("map",{crs:I.CRS.Simple}).fitBounds(n.getBounds());n.addTo(e);const t=z(M.features[0],M.features[1]);console.log(JSON.stringify(t)),I.geoJSON(t,{fillOpacity:.2,weight:3,color:"#1bfa06"}).addTo(e)},methods:{}},tt={id:"map"};function et(n,e,t,s,i,r){return q(),H("div",tt)}var nt=B(b,[["render",et]]);R(nt).mount("#app");
